import { useState } from "react"

const DemoForm1 = () => {
    const [msg, setMsg] = useState()
    const [commentaire, setCommentaire] = useState("Votre commentaire :)")
    const [nationalite, setNationalite] = useState("")
    const [celib, setCelib] = useState(false)

    const soumettreForm = (event) => {
        //On d√©sactive le comportement de base l'√©v√®nement
        //Puisque l'event type submit par d√©faut, essaie d'envoyer le formulaire, recharge la page et vide le formulaire
        event.preventDefault()
        console.log("C'est envoy√© ‚úâ")
        //On ne veut plus envoyer le formulaire de fa√ßon "classique", on fera toutes nos v√©rifications avant d'envoyer en base de donn√©es
        console.log(msg);
        console.log(commentaire);
        console.log(nationalite);
        console.log(celib)
    }

    return (
        //onSubmit : ev√®nement qui se d√©clenche quand on appuie sur l'input de type submit
        <form onSubmit={soumettreForm}>
            <h2>Input type texte</h2>
            <label htmlFor="msg">Entrez votre message : </label>
            {/* Avant on passait par une fonction qu'on avait d√©clar√©e dans une constante au dessus, on peut toujours, c'est juste long et comme un formulaire en g√©n√©ral, c'est long, on va s'√©pargner la cr√©ation d'autant de fonctions qu'on a d'inputs */}
            <input id="msg" type="text" onChange={(event) => {setMsg(event.target.value)}} />
            <p>Votre message est : {msg}</p>

            <h2>Textarea</h2>
            <label htmlFor="commentaire">Entrez votre commentaire :</label>
            <textarea id="commentaire" value={commentaire} onChange={(event) => {setCommentaire(event.target.value)}}  />
            <p>Votre commentaire  est : { commentaire }</p>

            <h2>Select</h2>
            <label htmlFor="nationalite">Selectionnez votre nationalit√© : </label>
            <select id="nationalite" value={nationalite} onChange={(event) => {setNationalite(event.target.value)}}>
                <option value="" hidden>Choisissez une nationalit√©</option>
                <option value="fran√ßaise">Fran√ßaise</option>
                <option value="belge">Belge</option>
                <option value="espagnole">Espagnole</option>
            </select>
            <p>Votre nationalit√© est : {nationalite}</p>

            <h2>Checkbox</h2>
            {/* Vigilance ! Pour r√©cup√©rer la valeur du type checkbox, ce n'est plus dans event.target.value comme les autres mais event.target.checked */}
            <input id="celib" type="checkbox" onChange={(event) => {setCelib(event.target.checked)}}  />
            <label htmlFor="celib">√ätes-vous c√©libataire ?</label>
            <p>{(celib) ? "Coeur √† prendre (Ou pas) ‚ô• " : "Coeur d√©j√† pris üîí"}</p>

            <input type="submit" value="Envoyer le formulaire" />
        </form>
    )
}


export default DemoForm1